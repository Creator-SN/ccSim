1	原型程序在解决问题中的作用是什么？	模拟所需软件产品部分的行为。
2	软件生命周期的哪些阶段受测试阶段的影响？	测试阶段可以影响编码阶段（阶段 5）和解决方案优化阶段（阶段 7）
3	与面向对象的编程相关的主要优势是什么？	抽象和可重复性。
4	程序C++在哪里执行？	在主函数。
5	什么是变量？	内存中可以存储值的位置。
6	在运行程序中声明C++在哪里？	变量可以在程序的任意位置声明。它们可以在函数（局部变量）内或在函数（全局变量）外部声明
7	一段时间和做 ... ...而声明？	一个里面的方块...而语句将至少执行一次。
8	类定义中通常包含哪些项？	数据成员（属性）和成员函数。
9	成员函数内的数据成员和局部变量有什么区别？	可以从类定义中的任何成员函数访问数据成员。只能在定义本地变量的成员函数内访问本地变量。
10	构造函数和函数的区别是什么？	每当创建对象时都会调用构造函数，而函数需要显式调用。构造函数没有返回类型，但函数必须指示返回类型。
11	何时C++创建默认构造函数？	如果未提供构造函数，编译器默认提供一个构造函数。如果为类定义了构造函数，编译器不会创建默认构造函数。
12	可以为类创建多少个构造函数？	无限数量。
13	函数原型和函数定义有什么区别？	函数原型包括函数签名，即函数的名称、返回类型和参数的类型。函数定义包括函数的实际正文。
14	头文件的作用是什么？	存储类接口，包括数据成员和成员函数原型。
15	函数签名包括哪些内容？	函数的名称和参数的类型。
16	全局变量的范围是什么？	文件范围。
17	编译器如何处理内联函数？	它在进行函数调用的每个位置复制函数代码。
18	通过引用传递的函数参数的主要优势是什么？	调用函数时，它避免复制大型数据结构。
19	重载函数如何被编译器区分？	基于函数签名。调用重载函数时，编译器将查找其签名最接近给定函数调用的函数。
20	在定义递归函数时，无限递归的可能原因是什么？	如果递归步骤定义不正确，或者不包括基例。
21	迭代和递归之间的相似性是什么？	它们都涉及重复;他们都有终止测试;它们都可以无限发生。
